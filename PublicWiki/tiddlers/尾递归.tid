created: 20200716002223622
creator: jun
modified: 20200716002647933
modifier: jun
tags: c++语法 技术细节
title: 尾递归
tmap.id: 98195730-2ada-4411-8ac4-43af2b45306a
type: text/vnd.tiddlywiki

!尾递归

当递归调用是整个函数体中`最后执行的语句`且它的`返回值不属于表达式的一部分`时，这个递归调用就是尾递归。

尾递归函数的特点是在回归过程中不用做任何操作，这个特性很重要，因为大多数现代的编译器会利用这种特点自动生成优化的代码。

```c
int facttail(int n, int res)//一个例子
{
    if (n < 0)
        return 0;
    else if(n == 0)
        return 1;
    else if(n == 1)
        return res;
    else
        return facttail(n - 1, n *res);
}
```

! 尾递归的原理

当编译器检测到一个函数调用是尾递归的时候，它就覆盖当前的活动记录而不是在栈中去创建一个新的。编译器可以做到这点，因为递归调用是当前活跃期内最后一条待执行的语句，于是当这个调用返回时栈帧中并没有其他事情可做，因此也就没有保存栈帧的必要了。通过覆盖当前的栈帧而不是在其之上重新添加一个，这样所使用的栈空间就大大缩减了，这使得实际的运行效率会变得更高。

[[原文|https://juejin.im/post/5f0dbed8f265da22de3df797]]
